{"ast":null,"code":"import _toConsumableArray from \"E:\\\\dinhle\\\\job\\\\GMU_RESEARCH\\\\repos\\\\rac\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:\\\\dinhle\\\\job\\\\GMU_RESEARCH\\\\repos\\\\rac\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\dinhle\\\\job\\\\GMU_RESEARCH\\\\repos\\\\rac\\\\client\\\\src\\\\common\\\\Pagination.js\";\n\nimport React, { useState, useEffect } from \"react\";\nvar LEFT_PAGE = \"LEFT\";\nvar RIGHT_PAGE = \"RIGHT\";\n\nvar range = function range(from, to) {\n  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var i = from;\n  var range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nvar Paginations = function Paginations(props) {\n  var totalRecords = props.totalRecords,\n      pageLimit = props.pageLimit,\n      pageNeighbours = props.pageNeighbours,\n      onPageChanged = props.onPageChanged,\n      currentPage = props.currentPage;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      totalPages = _useState2[0],\n      setTotalPages = _useState2[1];\n\n  useEffect(function () {\n    setTotalPages(Math.ceil(totalRecords / pageLimit));\n  }, [setTotalPages]);\n\n  var fetchPageNumbers = function fetchPageNumbers() {\n    var totalNumbers = pageNeighbours * 2 + 3;\n    var totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      var startPage = Math.max(2, currentPage - pageNeighbours);\n      var endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n      var _pages = range(startPage, endPage);\n\n      var hasLeftSpill = startPage > 2;\n      var hasRightSpill = totalPages - endPage > 1;\n      var spillOffset = totalNumbers - (_pages.length + 1);\n\n      switch (true) {\n        case hasLeftSpill && !hasRightSpill:\n          {\n            var extraPages = range(startPage - spillOffset, startPage - 1);\n            _pages = [LEFT_PAGE].concat(_toConsumableArray(extraPages), _toConsumableArray(_pages));\n            break;\n          }\n\n        case hasLeftSpill && hasRightSpill:\n        default:\n          {\n            _pages = [LEFT_PAGE].concat(_toConsumableArray(_pages), [RIGHT_PAGE]);\n            break;\n          }\n      }\n\n      return [1].concat(_toConsumableArray(_pages), [totalPages]);\n    }\n\n    return range(1, totalPages);\n  };\n\n  var pages = fetchPageNumbers() || [];\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"Countries Pagination\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pagination\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, pages.map(function (page, index) {\n    if (page === LEFT_PAGE) return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      className: \"page-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      className: \"page-link\",\n      \"aria-label\": \"Previous\",\n      onClick: function onClick(e) {\n        return onPageChanged(e, pageNeighbours * 2 - 1);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, \"\\xAB\")));\n    if (page === RIGHT_PAGE) return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      className: \"page-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"/\",\n      \"aria-label\": \"Next\",\n      onClick: function onClick(e) {\n        return onPageChanged(e, pageNeighbours * 2 + 3);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, \"\\xBB\")));\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      className: \"page-item\".concat(currentPage === page ? \" active\" : \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"/\",\n      onClick: function onClick(e) {\n        return onPageChanged(e, page);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, page));\n  })));\n};\n\nexport default Paginations;","map":{"version":3,"sources":["E:/dinhle/job/GMU_RESEARCH/repos/rac/client/src/common/Pagination.js"],"names":["React","useState","useEffect","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","i","push","Paginations","props","totalRecords","pageLimit","pageNeighbours","onPageChanged","currentPage","totalPages","setTotalPages","Math","ceil","fetchPageNumbers","totalNumbers","totalBlocks","startPage","max","endPage","min","pages","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","map","page","index","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nconst Paginations = (props) => {\r\n  const {\r\n    totalRecords,\r\n    pageLimit,\r\n    pageNeighbours,\r\n    onPageChanged,\r\n    currentPage\r\n  } = props;\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  useEffect(() => {\r\n    setTotalPages(Math.ceil(totalRecords / pageLimit));\r\n  }, [setTotalPages]);\r\n\r\n  const fetchPageNumbers = () => {\r\n    const totalNumbers = pageNeighbours * 2 + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n      const startPage = Math.max(2, currentPage - pageNeighbours);\r\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\r\n\r\n      let pages = range(startPage, endPage);\r\n\r\n      const hasLeftSpill = startPage > 2;\r\n      const hasRightSpill = totalPages - endPage > 1;\r\n      const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n      switch (true) {\r\n        case hasLeftSpill && !hasRightSpill: {\r\n          const extraPages = range(startPage - spillOffset, startPage - 1);\r\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\r\n          break;\r\n        }\r\n        case hasLeftSpill && hasRightSpill:\r\n        default: {\r\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\r\n          break;\r\n        }\r\n      }\r\n      return [1, ...pages, totalPages];\r\n    }\r\n    return range(1, totalPages);\r\n  };\r\n\r\n  const pages = fetchPageNumbers() || [];\r\n  return (\r\n    <nav aria-label=\"Countries Pagination\">\r\n      <ul className=\"pagination\">\r\n        {pages.map((page, index) => {\r\n          if (page === LEFT_PAGE)\r\n            return (\r\n              <li key={index} className=\"page-item\">\r\n                <a\r\n                  href=\"/\"\r\n                  className=\"page-link\"\r\n                  aria-label=\"Previous\"\r\n                  onClick={(e) => onPageChanged(e, pageNeighbours * 2 - 1)}\r\n                >\r\n                  <span aria-hidden=\"true\">&laquo;</span>\r\n                </a>\r\n              </li>\r\n            );\r\n\r\n          if (page === RIGHT_PAGE)\r\n            return (\r\n              <li key={index} className=\"page-item\">\r\n                <a\r\n                  className=\"page-link\"\r\n                  href=\"/\"\r\n                  aria-label=\"Next\"\r\n                  onClick={(e) => onPageChanged(e, pageNeighbours * 2 + 3)}\r\n                >\r\n                  <span aria-hidden=\"true\">&raquo;</span>\r\n                </a>\r\n              </li>\r\n            );\r\n\r\n          return (\r\n            <li\r\n              key={index}\r\n              className={`page-item${currentPage === page ? \" active\" : \"\"}`}\r\n            >\r\n              <a\r\n                className=\"page-link\"\r\n                href=\"/\"\r\n                onClick={(e) => onPageChanged(e, page)}\r\n              >\r\n                {page}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Paginations;\r\n"]},"metadata":{},"sourceType":"module"}