{"ast":null,"code":"import _slicedToArray from \"E:\\\\dinhle\\\\job\\\\GMU_RESEARCH\\\\repos\\\\rac\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\dinhle\\\\job\\\\GMU_RESEARCH\\\\repos\\\\rac\\\\client\\\\src\\\\components\\\\ForgotPassword.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport Axios from \"axios\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Nav, Navbar, Form, Button, Modal } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\n\nfunction ForgotPassword() {\n  var history = useHistory();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      usernameReg = _useState2[0],\n      setUernameReg = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordReg = _useState4[0],\n      setPasswordReg = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPasswordReg = _useState6[0],\n      setConfirmPasswordReg = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      DOBReg = _useState8[0],\n      setDOBReg = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      facilityReg = _useState10[0],\n      setFacilityReg = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      offenseReg = _useState12[0],\n      setOffenseReg = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sentenceReg = _useState14[0],\n      setSentenceReg = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      messageConfirm = _useState16[0],\n      setmessageConfirm = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      securityQuestion1Reg = _useState18[0],\n      setSecurityQuestion1Reg = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      securityQuestion2Reg = _useState20[0],\n      setSecurityQuestion2Reg = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      securityQuestion3Reg = _useState22[0],\n      setSecurityQuestion3Reg = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      securityAnswer1Reg = _useState24[0],\n      setSecurityAnswer1Reg = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      securityAnswer2Reg = _useState26[0],\n      setSecurityAnswer2Reg = _useState26[1];\n\n  var _useState27 = useState(\"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      securityAnswer3Reg = _useState28[0],\n      setSecurityAnswer3Reg = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      profileData = _useState30[0],\n      setProfileData = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      show = _useState32[0],\n      setShow = _useState32[1];\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var _useState33 = useState(\"\"),\n      _useState34 = _slicedToArray(_useState33, 2),\n      newPassword = _useState34[0],\n      setNewPassword = _useState34[1];\n\n  var _useState35 = useState(\"\"),\n      _useState36 = _slicedToArray(_useState35, 2),\n      newPasswordConfirm = _useState36[0],\n      setNewPasswordConfirm = _useState36[1];\n\n  var updatePassword = function updatePassword() {\n    Axios.post(\"http://localhost:3001/forgotPassword/updatePassword\", {\n      username: username,\n      password: newPassword\n    }).then(function (response) {\n      console.log(response);\n      history.push(\"/login\");\n    });\n  }; //TODO1 declare a const userName, will revieve data from login, reset link\n  // hardcode for now\n\n\n  var _useState37 = useState(\"dinhsec\"),\n      _useState38 = _slicedToArray(_useState37, 2),\n      username = _useState38[0],\n      setUserNameReset = _useState38[1];\n\n  var textAlign = {\n    textAlign: 'left',\n    color: '#000000'\n  };\n  var signUp = {\n    marginTop: '10px'\n  };\n  var signUpLink = {\n    color: '#2580F6'\n  };\n  Axios.defaults.withCredentials = true; //TODO5: declare a function to check the username, with all sec questions match with ans\n  // if match > show up a form to let user update new password\n  // else redo\n\n  var resetPassword = function resetPassword() {\n    if (securityAnswer1Reg.length == 0) {\n      setmessageConfirm(\"Please input all anwsers!\");\n    } else if (profileData[0].answer_1 == securityAnswer1Reg && profileData[0].answer_2 == securityAnswer2Reg && profileData[0].answer_3 == securityAnswer3Reg) {\n      //TODO 8: make a form with new passwords, then call to updated new passwowrd\n      setShow(true);\n    } else {\n      setmessageConfirm(\"Answers have not matched!\");\n    }\n  };\n\n  useEffect(function () {\n    //TODO2 select all user security questions from userName recieved from Login, reset password\n    console.log(\"userName client is: \" + username);\n    Axios.post(\"http://localhost:3001/forgotPassword/getSecQuestionbyUsername\", {\n      username: username\n    }).then(function (response) {\n      setProfileData(response.data);\n      console.log(response);\n    });\n  }, []); //TODO3 map all name and, sec questions to the form, readonly\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container Registration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signInHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 8\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(Navbar, {\n    bg: \"success\",\n    variant: \"dark\",\n    fixed: \"top\",\n    expand: \"lg\",\n    collapseOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 10\n    }\n  }, \"Reentry and Corrections\"), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    href: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"About Us\"), /*#__PURE__*/React.createElement(Nav.Link, {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Log In\")))), profileData.length >= 0 ? profileData.map(function (user) {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      style: textAlign,\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      readOnly: true,\n      value: user.username.length > 0 ? user.username : 'N/A',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      style: textAlign,\n      className: \"mb-3\",\n      controlId: \"formBasicQuestion1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"Security Question 1\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      readOnly: true,\n      value: user.security_question_1.length > 0 ? user.security_question_1 : 'N/A',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      style: textAlign,\n      className: \"mb-3\",\n      controlId: \"formBasicAnswer1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Security Answer 1\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      readOnly: true,\n      placeholder: \"Security Answer 1\",\n      onChange: function onChange(e) {\n        setSecurityAnswer1Reg(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      style: textAlign,\n      className: \"mb-3\",\n      controlId: \"formBasicQuestion2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"Security Question 2\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      readOnly: true,\n      value: user.security_question_2.length > 0 ? user.security_question_2 : 'N/A',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      style: textAlign,\n      className: \"mb-3\",\n      controlId: \"formBasicAnswer2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"Security Answer 2\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Security Answer 2\",\n      onChange: function onChange(e) {\n        setSecurityAnswer2Reg(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      style: textAlign,\n      className: \"mb-3\",\n      controlId: \"formBasicQuestion3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 10\n      }\n    }, \"Security Question 3\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      readonly: true,\n      value: user.security_question_3.length > 0 ? user.security_question_3 : 'N/A',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      style: textAlign,\n      className: \"mb-3\",\n      controlId: \"formBasicAnswer3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 10\n      }\n    }, \"Security Answer 3\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Security Answer 3\",\n      onChange: function onChange(e) {\n        setSecurityAnswer3Reg(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"fullWidth\",\n      variant: \"primary\",\n      onClick: resetPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, \"Reset Password\"));\n  }) : history.push(\"/login\"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, \"Update new password\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"exampleForm.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, \"New password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"newPassword\",\n    type: \"password\",\n    onChange: function onChange(e) {\n      setNewPassword(e.target.value);\n    },\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"exampleForm.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"Confirm password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"newPasswordConfirm\",\n    type: \"password\",\n    onChange: function onChange(e) {\n      setNewPasswordConfirm(e.target.value);\n    },\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: updatePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, \"Save Changes\"))), messageConfirm);\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["E:/dinhle/job/GMU_RESEARCH/repos/rac/client/src/components/ForgotPassword.js"],"names":["React","useState","useEffect","Axios","Nav","Navbar","Form","Button","Modal","useHistory","ForgotPassword","history","usernameReg","setUernameReg","passwordReg","setPasswordReg","confirmPasswordReg","setConfirmPasswordReg","DOBReg","setDOBReg","facilityReg","setFacilityReg","offenseReg","setOffenseReg","sentenceReg","setSentenceReg","messageConfirm","setmessageConfirm","securityQuestion1Reg","setSecurityQuestion1Reg","securityQuestion2Reg","setSecurityQuestion2Reg","securityQuestion3Reg","setSecurityQuestion3Reg","securityAnswer1Reg","setSecurityAnswer1Reg","securityAnswer2Reg","setSecurityAnswer2Reg","securityAnswer3Reg","setSecurityAnswer3Reg","profileData","setProfileData","show","setShow","handleClose","handleShow","newPassword","setNewPassword","newPasswordConfirm","setNewPasswordConfirm","updatePassword","post","username","password","then","response","console","log","push","setUserNameReset","textAlign","color","signUp","marginTop","signUpLink","defaults","withCredentials","resetPassword","length","answer_1","answer_2","answer_3","data","map","user","security_question_1","e","target","value","security_question_2","security_question_3"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport \"../App.css\";\r\nimport Axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Nav, Navbar, Form, Button,Modal} from 'react-bootstrap';\r\nimport { useHistory } from 'react-router'\r\n \r\nfunction ForgotPassword() {\r\n  const history = useHistory();\r\n  const [usernameReg, setUernameReg] = useState(\"\");\r\n  const [passwordReg, setPasswordReg] = useState(\"\");\r\n  const [confirmPasswordReg, setConfirmPasswordReg] = useState(\"\");\r\n  const [DOBReg, setDOBReg] = useState(\"\");\r\n  const [facilityReg, setFacilityReg] = useState(\"\");\r\n  const [offenseReg, setOffenseReg] = useState(\"\");\r\n  const [sentenceReg, setSentenceReg] = useState(0);\r\n  const [messageConfirm, setmessageConfirm] = useState(\"\");\r\n\r\n  const [securityQuestion1Reg, setSecurityQuestion1Reg] = useState(\"\");\r\n  const [securityQuestion2Reg, setSecurityQuestion2Reg] = useState(\"\");\r\n  const [securityQuestion3Reg, setSecurityQuestion3Reg] = useState(\"\");\r\n  const [securityAnswer1Reg, setSecurityAnswer1Reg] = useState(\"\");\r\n  const [securityAnswer2Reg, setSecurityAnswer2Reg] = useState(\"\");\r\n  const [securityAnswer3Reg, setSecurityAnswer3Reg] = useState(\"\");\r\n\r\n  const [profileData, setProfileData] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [newPasswordConfirm, setNewPasswordConfirm] = useState(\"\");\r\n\r\n  const updatePassword = () => {\r\n   Axios.post(\"http://localhost:3001/forgotPassword/updatePassword\", {\r\n      username : username ,\r\n      password : newPassword\r\n    }).then((response) => {\r\n      console.log(response)\r\n      history.push(\"/login\")\r\n  })\r\n  };\r\n\r\n\r\n   //TODO1 declare a const userName, will revieve data from login, reset link\r\n   // hardcode for now\r\n   const [username, setUserNameReset] = useState(\"dinhsec\"); \r\n\r\n  const textAlign = {\r\n    textAlign: 'left',\r\n    color: '#000000',\r\n   };\r\n   const signUp = {\r\n    marginTop: '10px',\r\n   };\r\n   const signUpLink = {\r\n    color: '#2580F6',\r\n   };\r\n\r\n  Axios.defaults.withCredentials = true;\r\n  //TODO5: declare a function to check the username, with all sec questions match with ans\r\n  // if match > show up a form to let user update new password\r\n  // else redo\r\n  const resetPassword = () => {\r\n    if (securityAnswer1Reg.length == 0){\r\n      setmessageConfirm(\"Please input all anwsers!\")\r\n    } else if(profileData[0].answer_1 == securityAnswer1Reg && profileData[0].answer_2 == securityAnswer2Reg && profileData[0].answer_3 == securityAnswer3Reg) {\r\n      //TODO 8: make a form with new passwords, then call to updated new passwowrd\r\n      setShow(true)\r\n    } else {\r\n      setmessageConfirm(\"Answers have not matched!\")\r\n    }\r\n   };\r\n   useEffect(()=> {\r\n       //TODO2 select all user security questions from userName recieved from Login, reset password\r\n       console.log(\"userName client is: \" +username );\r\n      Axios.post(\"http://localhost:3001/forgotPassword/getSecQuestionbyUsername\", {\r\n         username : username\r\n       }).then((response) => {\r\n         setProfileData(response.data)\r\n         console.log(response)\r\n     })\r\n   }, []);\r\n   //TODO3 map all name and, sec questions to the form, readonly\r\n   return (\r\n     <div className=\"container Registration\">\r\n       <div className=\"signInHeader\">Reset Password</div>\r\n       <Navbar bg=\"success\" variant=\"dark\" fixed=\"top\" expand=\"lg\" collapseOnSelect>\r\n         <Navbar.Brand>Reentry and Corrections</Navbar.Brand>\r\n         <Navbar.Toggle />\r\n         <Navbar.Collapse>\r\n         <Nav>\r\n            <Nav.Link href=\"/about\">About Us</Nav.Link>\r\n            <Nav.Link href=\"/login\">Log In</Nav.Link>\r\n         </Nav>\r\n         </Navbar.Collapse>\r\n      </Navbar>\r\n      {profileData.length >= 0 ?\r\n      profileData.map(function(user){\r\n      return (  \r\n      <Form>\r\n         <Form.Group style={textAlign} className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control type=\"text\" readOnly   value={user.username.length > 0 ? user.username : 'N/A'}\r\n             />\r\n         </Form.Group>\r\n         <Form.Group style={textAlign} className=\"mb-3\" controlId=\"formBasicQuestion1\">\r\n            <Form.Label>Security Question 1</Form.Label>\r\n            <Form.Control\r\n            type=\"text\" readOnly value={user.security_question_1.length > 0 ? user.security_question_1 : 'N/A'}\r\n            />\r\n         </Form.Group>\r\n         <Form.Group style={textAlign} className=\"mb-3\" controlId=\"formBasicAnswer1\">\r\n            <Form.Label>Security Answer 1</Form.Label>\r\n            <Form.Control \r\n            type=\"text\" readOnly placeholder=\"Security Answer 1\"\r\n            onChange={(e) => {\r\n               setSecurityAnswer1Reg(e.target.value);\r\n            }} \r\n            />\r\n         </Form.Group>   \r\n         <Form.Group style={textAlign} className=\"mb-3\" controlId=\"formBasicQuestion2\">\r\n            <Form.Label>Security Question 2</Form.Label>\r\n            <Form.Control \r\n            type=\"text\" readOnly  value={user.security_question_2.length > 0 ? user.security_question_2 : 'N/A'}\r\n            />\r\n         </Form.Group>\r\n         <Form.Group style={textAlign} className=\"mb-3\" controlId=\"formBasicAnswer2\">\r\n            <Form.Label>Security Answer 2</Form.Label>\r\n         <Form.Control \r\n         type=\"text\" placeholder=\"Security Answer 2\"\r\n         onChange={(e) => {\r\n            setSecurityAnswer2Reg(e.target.value);\r\n         }} \r\n         />\r\n      </Form.Group>     \r\n      <Form.Group style={textAlign} className=\"mb-3\" controlId=\"formBasicQuestion3\">\r\n         <Form.Label>Security Question 3</Form.Label>\r\n         <Form.Control \r\n         type=\"text\" readonly value={user.security_question_3.length > 0 ? user.security_question_3 : 'N/A'}\r\n         />\r\n      </Form.Group>\r\n      <Form.Group style={textAlign} className=\"mb-3\" controlId=\"formBasicAnswer3\">\r\n         <Form.Label>Security Answer 3</Form.Label>\r\n         <Form.Control \r\n         type=\"text\" placeholder=\"Security Answer 3\"\r\n         onChange={(e) => {\r\n            setSecurityAnswer3Reg(e.target.value);\r\n         }} \r\n         />\r\n      </Form.Group> \r\n\r\n      <Button \r\n      className=\"fullWidth\"\r\n      variant=\"primary\"\r\n      onClick={resetPassword}\r\n      >\r\n         Reset Password\r\n      </Button>\r\n      </Form>\r\n      )\r\n         }) : history.push(\"/login\")\r\n      }\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Update new password</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>New password</Form.Label>\r\n              <Form.Control\r\n                name=\"newPassword\"\r\n                type=\"password\"\r\n                onChange={(e) => {\r\n                  setNewPassword(e.target.value);\r\n               }} \r\n                autoFocus\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Confirm password</Form.Label>\r\n              <Form.Control\r\n                name=\"newPasswordConfirm\"\r\n                type=\"password\"\r\n                onChange={(e) => {\r\n                  setNewPasswordConfirm(e.target.value);\r\n               }} \r\n                autoFocus\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={updatePassword}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      {messageConfirm}\r\n     </div>\r\n   );\r\n}\r\nexport default ForgotPassword;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}